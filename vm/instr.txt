16-bit long opcode <word>
-------------------------

0b0000000000000000
  fedcba9876543210
  OOOOOOOOX*aaX*AA

OPD
 reg)
  X000 = 0 -> direct
  X001 = 1 -> indirect
  X010 = 2 -> immediate

 mem)
  X100 = 8 -> direct
  X101 = 9 -> indirect
  X110 = a -> immediate

hex = 0xOOaA

X: dont care
O: opcode
A: addrs mode operand1
a: addrs mode operand2
*: flag reg/mem

8-f = opcode (instruction) <byte>
0-2 = opd1 addrs mode
4-6 = opd2 addrs mode

Address
X*00 = REG/MEM   direct
X*01 = REG/MEM indirect
X*10 = REG/MEM immediate

# Mnemonic code
add   x   # acc += reg[x] # direct
add ,Ix   # acc += mem[x] # indirect
add  #x   # acc += v      # immediate


OPCODE table
-------------------------

16: ret    ()
11: stop   ()

02: add    (opd_1)
00: br     (opd_1)
05: brneg  (opd_1)
01: brpos  (opd_1)
04: brzero (opd_1)
15: call   (opd_1)
10: divide (opd_1)
03: load   (opd_1)
14: mult   (opd_1)
17: push   (opd_1)
07: store  (opd_1)
06: sub    (opd_1)
18: pop    (opd_1)

13: copy_r (opd_1, opd_2)
19: copy_m (opd_1, opd_2)